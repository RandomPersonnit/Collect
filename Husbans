import asyncio

from telethon import events

from .. import loader, utils


@loader.tds
class AutoForwardModule(loader.Module):
    """Модуль для автоматического пересылки сообщений от ботов"""

    strings = {"name": "AutoForward"}

    def __init__(self):
        self.running_forward = False
        self.success_message = "<b>Auto Forwarding is enabled</b>"
        self.already_running_message = "<b>Auto Forwarding is already enabled</b>"

    @loader.unrestricted
    async def concmd(self, message: events.NewMessage.Event):
        """Starts auto forwarding messages from specified bots"""
        if self.running_forward:
            await utils.answer(message, self.already_running_message)
            return
        self.running_forward = True

        await utils.answer(message, self.success_message)

        while self.running_forward:
            if message.sender_id in [-1001858057789, -1001642619450]:
                await message.forward_to('@collect_waifu_cheats_bot')
            await asyncio.sleep(1)

    @loader.unrestricted
    async def coffcmd(self, message: events.NewMessage.Event):
        """Stops the auto forwarding"""
        if not self.running_forward:
            await utils.answer(message, "<b>Auto Forwarding is already disabled</b>")
            return
        self.running_forward = False
        await utils.answer(message, "<b>Auto Forwarding is disabled</b>")
