import asyncio
from hikkatl import types
from telethon import functions

from .. import loader, utils


@loader.tds
class SendMessageModule(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–∞–∑–Ω—ã–º –±–æ—Ç–∞–º"""

    strings = {"name": "AutoSend"}

    def __init__(self):
        self.cpon_running = False
        self.cpon_success_message = "<b>üî• –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç –Ω–∞ –±–æ—Ç–∞ @Collect_your_husbando_bot —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω<b>"
        self.cpon_already_running_message = "‚ùåÔ∏è –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç –Ω–∞ –±–æ—Ç–∞ @Collect_your_husbando_bot —É–∂–µ –∑–∞–ø—É—â–µ–Ω"

        self.ichigo_chat = "@ichigochat"
        self.husbando_bot = "@Collect_your_husbando_bot"

    @loader.unrestricted
    async def cponcmd(self, message: types.Message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç –Ω–∞ –±–æ—Ç–∞ @Collect_your_husbando_bot"""
        if self.cpon_running:
            await utils.answer(message, self.cpon_already_running_message)
            return
        self.cpon_running = True
        await utils.answer(message, self.cpon_success_message)

        async def reply_handler(event):
            if event.chat_id == self.husbando_bot and event.media and event.media.photo:
                await event.reply("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–Ω–∏–º–µ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /protecc")

        message.client.add_event_handler(reply_handler, types.Message(incoming=True))

    @loader.unrestricted
    async def cpoffcmd(self, message: types.Message):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç –Ω–∞ –±–æ—Ç–∞ @Collect_your_husbando_bot"""
        if not self.cpon_running:
            await utils.answer(message, "‚ùåÔ∏è –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
            return
        self.cpon_running = False
        await utils.answer(message, "‚úîÔ∏è –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
